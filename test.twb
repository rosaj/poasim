<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0321.1733                               -->
<workbook original-version='18.1' source-build='2019.1.2 (20191.19.0321.1733)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='test' inline='true' name='federated.0hixqyd1wlu7rn17wd22b1qcwp37' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='test' name='textscan.0ggmv030b0mrki1dnvt9c1dduonh'>
            <connection class='textscan' directory='C:/Users/Robert/Desktop/FaksDiplomski2/Diplomski/go/poasim' filename='test.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ggmv030b0mrki1dnvt9c1dduonh' name='test.csv' table='[test#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ROWID' ordinal='0' />
            <column datatype='string' name='Time' ordinal='1' />
            <column datatype='string' name='BlockHeadersMsg' ordinal='2' />
            <column datatype='integer' name='DEVP2P_HANDSHAKE' ordinal='3' />
            <column datatype='integer' name='DEVP2P_PING' ordinal='4' />
            <column datatype='integer' name='DEVP2P_PONG' ordinal='5' />
            <column datatype='integer' name='DEVp2p peers' ordinal='6' />
            <column datatype='integer' name='DiscoveryTable' ordinal='7' />
            <column datatype='integer' name='Eth peers' ordinal='8' />
            <column datatype='integer' name='FINDNODE' ordinal='9' />
            <column datatype='string' name='GetBlockHeadersMsg' ordinal='10' />
            <column datatype='integer' name='Mined block' ordinal='11' />
            <column datatype='integer' name='NEIGHBORS' ordinal='12' />
            <column datatype='integer' name='NewBlockHashesMsg' ordinal='13' />
            <column datatype='integer' name='NewBlockMsg' ordinal='14' />
            <column datatype='integer' name='Online nodes' ordinal='15' />
            <column datatype='integer' name='PING' ordinal='16' />
            <column datatype='integer' name='PONG' ordinal='17' />
            <column datatype='integer' name='Pending txs' ordinal='18' />
            <column datatype='integer' name='Queued txs' ordinal='19' />
            <column datatype='integer' name='StatusMsg' ordinal='20' />
            <column datatype='integer' name='Tx pool errors' ordinal='21' />
            <column datatype='integer' name='TxMsg' ordinal='22' />
            <column datatype='integer' name='Txs arrival' ordinal='23' />
            <column datatype='string' name='bad block' ordinal='24' />
            <column datatype='integer' name='chain split depth' ordinal='25' />
            <column datatype='integer' name='chain split detected' ordinal='26' />
            <column datatype='string' name='exceeds block gas limit' ordinal='27' />
            <column datatype='integer' name='gas limit' ordinal='28' />
            <column datatype='integer' name='insert forked block' ordinal='29' />
            <column datatype='integer' name='insert new block' ordinal='30' />
            <column datatype='string' name='insufficient funds for gas * price + value' ordinal='31' />
            <column datatype='integer' name='known transaction' ordinal='32' />
            <column datatype='string' name='missing parent' ordinal='33' />
            <column datatype='string' name='non contiguous insert' ordinal='34' />
            <column datatype='string' name='non contiguous receipt insert' ordinal='35' />
            <column datatype='integer' name='nonce too low' ordinal='36' />
            <column datatype='string' name='sidechain detected' ordinal='37' />
            <column datatype='string' name='sidechain inject' ordinal='38' />
            <column datatype='integer' name='transaction underpriced' ordinal='39' />
            <column datatype='integer' name='txs per block' ordinal='40' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[test.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROWID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ROWID]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>ROWID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BlockHeadersMsg</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BlockHeadersMsg]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>BlockHeadersMsg</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEVP2P_HANDSHAKE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEVP2P_HANDSHAKE]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>DEVP2P_HANDSHAKE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEVP2P_PING</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEVP2P_PING]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>DEVP2P_PING</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEVP2P_PONG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEVP2P_PONG]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>DEVP2P_PONG</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEVp2p peers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEVp2p peers]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>DEVp2p peers</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DiscoveryTable</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DiscoveryTable]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>DiscoveryTable</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Eth peers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Eth peers]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>Eth peers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FINDNODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FINDNODE]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>FINDNODE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GetBlockHeadersMsg</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GetBlockHeadersMsg]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>GetBlockHeadersMsg</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mined block</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mined block]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>Mined block</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NEIGHBORS]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>NEIGHBORS</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewBlockHashesMsg</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewBlockHashesMsg]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>NewBlockHashesMsg</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewBlockMsg</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewBlockMsg]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>NewBlockMsg</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Online nodes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Online nodes]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>Online nodes</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PING</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PING]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>PING</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PONG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PONG]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>PONG</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pending txs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pending txs]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>Pending txs</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Queued txs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Queued txs]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>Queued txs</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StatusMsg</remote-name>
            <remote-type>20</remote-type>
            <local-name>[StatusMsg]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>StatusMsg</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tx pool errors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tx pool errors]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>Tx pool errors</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TxMsg</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TxMsg]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>TxMsg</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Txs arrival</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Txs arrival]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>Txs arrival</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bad block</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bad block]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>bad block</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>chain split depth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[chain split depth]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>chain split depth</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>chain split detected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[chain split detected]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>chain split detected</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>exceeds block gas limit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[exceeds block gas limit]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>exceeds block gas limit</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas limit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gas limit]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>gas limit</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>insert forked block</remote-name>
            <remote-type>20</remote-type>
            <local-name>[insert forked block]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>insert forked block</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>insert new block</remote-name>
            <remote-type>20</remote-type>
            <local-name>[insert new block]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>insert new block</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>insufficient funds for gas * price + value</remote-name>
            <remote-type>129</remote-type>
            <local-name>[insufficient funds for gas * price + value]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>insufficient funds for gas * price + value</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>known transaction</remote-name>
            <remote-type>20</remote-type>
            <local-name>[known transaction]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>known transaction</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>missing parent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[missing parent]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>missing parent</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non contiguous insert</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non contiguous insert]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>non contiguous insert</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non contiguous receipt insert</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non contiguous receipt insert]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>non contiguous receipt insert</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nonce too low</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nonce too low]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>nonce too low</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sidechain detected</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sidechain detected]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>sidechain detected</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sidechain inject</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sidechain inject]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>sidechain inject</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transaction underpriced</remote-name>
            <remote-type>20</remote-type>
            <local-name>[transaction underpriced]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>transaction underpriced</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>txs per block</remote-name>
            <remote-type>20</remote-type>
            <local-name>[txs per block]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>txs per block</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:known transaction:qk]&quot;' value='Br. redundantnih tran.' />
          <alias key='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:transaction underpriced:qk]&quot;' value='Odbijena transakcija' />
          <alias key='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:TxMsg:qk]&quot;' value='Broj transakcija po mreži' />
          <alias key='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:Txs arrival:qk]&quot;' value='Dolazak novih transakcija' />
          <alias key='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:known transaction:qk]&quot;' value='Br. redundantnih trans.' />
          <alias key='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888006430720:qk]&quot;' value='Transakcije na čekanju' />
          <alias key='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888007335937:qk]&quot;' value='Broj transakcija po bloku' />
        </aliases>
      </column>
      <column caption='Block Headers Msg' datatype='string' name='[BlockHeadersMsg]' role='dimension' type='nominal' />
      <column caption='TxsPending' datatype='integer' name='[Calculation_479351888006430720]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(IFNULL(SUM([Pending txs]),PREVIOUS_VALUE(SUM([Pending txs]))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='BlockTxs' datatype='integer' name='[Calculation_479351888007335937]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(IFNULL(SUM([txs per block]),PREVIOUS_VALUE(SUM([txs per block]))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='UnderpricedTxs' datatype='integer' name='[Calculation_479351888009437186]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(IFNULL(SUM([transaction underpriced]),PREVIOUS_VALUE(SUM([transaction underpriced]))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Devp2P Handshake' datatype='integer' name='[DEVP2P_HANDSHAKE]' role='measure' type='quantitative' />
      <column caption='Devp2P Ping' datatype='integer' name='[DEVP2P_PING]' role='measure' type='quantitative' />
      <column caption='Devp2P Pong' datatype='integer' name='[DEVP2P_PONG]' role='measure' type='quantitative' />
      <column caption='Discovery Table' datatype='integer' name='[DiscoveryTable]' role='measure' type='quantitative' />
      <column caption='Findnode' datatype='integer' name='[FINDNODE]' role='measure' type='quantitative' />
      <column caption='Get Block Headers Msg' datatype='string' name='[GetBlockHeadersMsg]' role='dimension' type='nominal' />
      <column caption='Neighbors' datatype='integer' name='[NEIGHBORS]' role='measure' type='quantitative' />
      <column caption='New Block Hashes Msg' datatype='integer' name='[NewBlockHashesMsg]' role='measure' type='quantitative' />
      <column caption='New Block Msg' datatype='integer' name='[NewBlockMsg]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ping' datatype='integer' name='[PING]' role='measure' type='quantitative' />
      <column caption='Pong' datatype='integer' name='[PONG]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Pending txs]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Queued txs]' role='measure' type='quantitative' />
      <column caption='Rowid' datatype='integer' name='[ROWID]' role='measure' type='quantitative' />
      <column caption='Status Msg' datatype='integer' name='[StatusMsg]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Tx pool errors]' role='measure' type='quantitative' />
      <column caption='Tx Msg' datatype='integer' name='[TxMsg]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Txs arrival]' role='measure' type='quantitative' />
      <column caption='Bad Block' datatype='string' name='[bad block]' role='dimension' type='nominal' />
      <column caption='Chain Split Depth' datatype='integer' name='[chain split depth]' role='measure' type='quantitative' />
      <column caption='Chain Split Detected' datatype='integer' name='[chain split detected]' role='measure' type='quantitative' />
      <column caption='Exceeds Block Gas Limit' datatype='string' name='[exceeds block gas limit]' role='dimension' type='nominal' />
      <column caption='Gas Limit' datatype='integer' name='[gas limit]' role='measure' type='quantitative' />
      <column caption='Insert Forked Block' datatype='integer' name='[insert forked block]' role='measure' type='quantitative' />
      <column caption='Insert New Block' datatype='integer' name='[insert new block]' role='measure' type='quantitative' />
      <column caption='Insufficient Funds For Gas * Price + Value' datatype='string' name='[insufficient funds for gas * price + value]' role='dimension' type='nominal' />
      <column caption='Known Transaction' datatype='integer' name='[known transaction]' role='measure' type='quantitative' />
      <column caption='Missing Parent' datatype='string' name='[missing parent]' role='dimension' type='nominal' />
      <column caption='Non Contiguous Insert' datatype='string' name='[non contiguous insert]' role='dimension' type='nominal' />
      <column caption='Non Contiguous Receipt Insert' datatype='string' name='[non contiguous receipt insert]' role='dimension' type='nominal' />
      <column caption='Nonce Too Low' datatype='integer' name='[nonce too low]' role='measure' type='quantitative' />
      <column caption='Sidechain Detected' datatype='string' name='[sidechain detected]' role='dimension' type='nominal' />
      <column caption='Sidechain Inject' datatype='string' name='[sidechain inject]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Transaction Underpriced' datatype='integer' name='[transaction underpriced]' role='measure' type='quantitative' />
      <column caption='Txs Per Block' datatype='integer' name='[txs per block]' role='measure' type='quantitative' />
      <column-instance column='[Pending txs]' derivation='Attribute' name='[attr:Pending txs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Queued txs]' derivation='Attribute' name='[attr:Queued txs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tx pool errors]' derivation='Attribute' name='[attr:Tx pool errors:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TxMsg]' derivation='Attribute' name='[attr:TxMsg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Txs arrival]' derivation='Attribute' name='[attr:Txs arrival:qk]' pivot='key' type='quantitative' />
      <column-instance column='[known transaction]' derivation='Attribute' name='[attr:known transaction:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nonce too low]' derivation='Attribute' name='[attr:nonce too low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[transaction underpriced]' derivation='Attribute' name='[attr:transaction underpriced:qk]' pivot='key' type='quantitative' />
      <column-instance column='[txs per block]' derivation='Attribute' name='[attr:txs per block:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nonce too low]' derivation='Count' name='[cnt:nonce too low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nonce too low]' derivation='CountD' name='[ctd:nonce too low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[transaction underpriced]' derivation='CountD' name='[ctd:transaction underpriced:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nonce too low]' derivation='None' name='[none:nonce too low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewBlockMsg]' derivation='Sum' name='[sum:NewBlockMsg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pending txs]' derivation='Sum' name='[sum:Pending txs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Queued txs]' derivation='Sum' name='[sum:Queued txs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tx pool errors]' derivation='Sum' name='[sum:Tx pool errors:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TxMsg]' derivation='Sum' name='[sum:TxMsg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Txs arrival]' derivation='Sum' name='[sum:Txs arrival:qk]' pivot='key' type='quantitative' />
      <column-instance column='[known transaction]' derivation='Sum' name='[sum:known transaction:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nonce too low]' derivation='Sum' name='[sum:nonce too low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[txs per block]' derivation='Sum' name='[sum:txs per block:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_479351888006430720]' derivation='User' name='[usr:Calculation_479351888006430720:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_479351888007335937]' derivation='User' name='[usr:Calculation_479351888007335937:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_479351888009437186]' derivation='User' name='[usr:Calculation_479351888009437186:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.31738' measure-ordering='alphabetic' measure-percentage='0.68262' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:known transaction:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:Calculation_2038301046359527425:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:known transaction:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_2038301046359547906:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888007335937:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:TxMsg:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:TxMsg:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_2038301046359736324:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:Queued txs:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:Queued txs:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888009437186:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:nonce too low:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[cnt:nonce too low:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[ctd:nonce too low:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:nonce too low:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:nonce too low:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_2038301046359613443:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:Txs arrival:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:Txs arrival:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:Pending txs:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:transaction underpriced:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[ctd:transaction underpriced:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:Pending txs:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:txs per block:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:txs per block:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:NewBlockMsg:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888006430720:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:Tx pool errors:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:Tx pool errors:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_2038301046359461888:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='ROWID' />
        <field-sort-custom-order field='Time' />
        <field-sort-custom-order field='BlockHeadersMsg' />
        <field-sort-custom-order field='DEVP2P_HANDSHAKE' />
        <field-sort-custom-order field='DEVP2P_PING' />
        <field-sort-custom-order field='DEVP2P_PONG' />
        <field-sort-custom-order field='DEVp2p peers' />
        <field-sort-custom-order field='DiscoveryTable' />
        <field-sort-custom-order field='Eth peers' />
        <field-sort-custom-order field='FINDNODE' />
        <field-sort-custom-order field='GetBlockHeadersMsg' />
        <field-sort-custom-order field='Mined block' />
        <field-sort-custom-order field='NEIGHBORS' />
        <field-sort-custom-order field='NewBlockHashesMsg' />
        <field-sort-custom-order field='NewBlockMsg' />
        <field-sort-custom-order field='Online nodes' />
        <field-sort-custom-order field='PING' />
        <field-sort-custom-order field='PONG' />
        <field-sort-custom-order field='Pending txs' />
        <field-sort-custom-order field='Queued txs' />
        <field-sort-custom-order field='StatusMsg' />
        <field-sort-custom-order field='Tx pool errors' />
        <field-sort-custom-order field='TxMsg' />
        <field-sort-custom-order field='Txs arrival' />
        <field-sort-custom-order field='bad block' />
        <field-sort-custom-order field='chain split depth' />
        <field-sort-custom-order field='chain split detected' />
        <field-sort-custom-order field='exceeds block gas limit' />
        <field-sort-custom-order field='gas limit' />
        <field-sort-custom-order field='insert forked block' />
        <field-sort-custom-order field='insert new block' />
        <field-sort-custom-order field='insufficient funds for gas * price + value' />
        <field-sort-custom-order field='known transaction' />
        <field-sort-custom-order field='missing parent' />
        <field-sort-custom-order field='non contiguous insert' />
        <field-sort-custom-order field='non contiguous receipt insert' />
        <field-sort-custom-order field='nonce too low' />
        <field-sort-custom-order field='sidechain detected' />
        <field-sort-custom-order field='sidechain inject' />
        <field-sort-custom-order field='transaction underpriced' />
        <field-sort-custom-order field='txs per block' />
        <field-sort-custom-order field='Calculation_479351888006430720' />
        <field-sort-custom-order field='Calculation_479351888009437186' />
        <field-sort-custom-order field='Calculation_479351888007335937' />
      </field-sort-info>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Prez'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Broj čvorova: 6, razmak između blokova: 15 sek, podaci grupirani svakih 15 sek</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='test' name='federated.0hixqyd1wlu7rn17wd22b1qcwp37' />
          </datasources>
          <datasource-dependencies datasource='federated.0hixqyd1wlu7rn17wd22b1qcwp37'>
            <column caption='TxsPending' datatype='integer' name='[Calculation_479351888006430720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(IFNULL(SUM([Pending txs]),PREVIOUS_VALUE(SUM([Pending txs]))))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='BlockTxs' datatype='integer' name='[Calculation_479351888007335937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(IFNULL(SUM([txs per block]),PREVIOUS_VALUE(SUM([txs per block]))))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Pending txs]' role='measure' type='quantitative' />
            <column caption='Rowid' datatype='integer' name='[ROWID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Time]' role='dimension' type='nominal' />
            <column caption='Tx Msg' datatype='integer' name='[TxMsg]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Txs arrival]' role='measure' type='quantitative' />
            <column-instance column='[TxMsg]' derivation='Attribute' name='[attr:TxMsg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Txs arrival]' derivation='Attribute' name='[attr:Txs arrival:qk]' pivot='key' type='quantitative' />
            <column-instance column='[known transaction]' derivation='Attribute' name='[attr:known transaction:qk]' pivot='key' type='quantitative' />
            <column-instance column='[transaction underpriced]' derivation='Attribute' name='[attr:transaction underpriced:qk]' pivot='key' type='quantitative' />
            <column caption='Known Transaction' datatype='integer' name='[known transaction]' role='measure' type='quantitative' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:nk]' pivot='key' type='nominal' />
            <column-instance column='[ROWID]' derivation='Sum' name='[sum:ROWID:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Transaction Underpriced' datatype='integer' name='[transaction underpriced]' role='measure' type='quantitative' />
            <column caption='Txs Per Block' datatype='integer' name='[txs per block]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_479351888006430720]' derivation='User' name='[usr:Calculation_479351888006430720:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_479351888007335937]' derivation='User' name='[usr:Calculation_479351888007335937:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:TxMsg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:Txs arrival:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:transaction underpriced:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888007335937:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888006430720:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:known transaction:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:TxMsg:qk]&quot;</bucket>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:Txs arrival:qk]&quot;</bucket>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[attr:transaction underpriced:qk]&quot;</bucket>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888007335937:qk]&quot;</bucket>
              <bucket>&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888006430720:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:Time:nk]' direction='ASC' using='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:ROWID:qk]' />
          <slices>
            <column>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[Multiple Values]' scope='rows' value='Vrijednost' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' value='Mjere'>
              <formatted-text>
                <run>Mjere</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[Multiple Values]</rows>
        <cols>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:Time:nk]</cols>
      </table>
      <simple-id uuid='{C2DAA431-9473-4B63-9F56-262F36E169BE}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='test' name='federated.0hixqyd1wlu7rn17wd22b1qcwp37' />
          </datasources>
          <datasource-dependencies datasource='federated.0hixqyd1wlu7rn17wd22b1qcwp37'>
            <column caption='IFNULL(ATTR([Tx pool errors]), 0)' datatype='integer' name='[Calculation_2038301046359461888]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='IFNULL(ATTR([Tx pool errors]), 0)' />
            </column>
            <column caption='IFNULL(SUM([Known Transaction]),0)' datatype='integer' name='[Calculation_2038301046359547906]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='IFNULL(SUM([known transaction]),0)' />
            </column>
            <column caption='IFNULL(ATTR([Nonce Too Low]), 0)' datatype='integer' name='[Calculation_2038301046359613443]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='IFNULL(ATTR([nonce too low]), 0)' />
            </column>
            <column caption='SUM(IFNULL([Tx Msg], 0))' datatype='integer' name='[Calculation_2038301046359736324]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='SUM(IFNULL([TxMsg], 0))' />
            </column>
            <column caption='New Block Msg' datatype='integer' name='[NewBlockMsg]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Pending txs]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Queued txs]' role='measure' type='quantitative' />
            <column caption='Rowid' datatype='integer' name='[ROWID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Time]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Tx pool errors]' role='measure' type='quantitative' />
            <column caption='Tx Msg' datatype='integer' name='[TxMsg]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Txs arrival]' role='measure' type='quantitative' />
            <column caption='Known Transaction' datatype='integer' name='[known transaction]' role='measure' type='quantitative' />
            <column caption='Nonce Too Low' datatype='integer' name='[nonce too low]' role='measure' type='quantitative' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewBlockMsg]' derivation='Sum' name='[sum:NewBlockMsg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pending txs]' derivation='Sum' name='[sum:Pending txs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Queued txs]' derivation='Sum' name='[sum:Queued txs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ROWID]' derivation='Sum' name='[sum:ROWID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Txs arrival]' derivation='Sum' name='[sum:Txs arrival:qk]' pivot='key' type='quantitative' />
            <column-instance column='[txs per block]' derivation='Sum' name='[sum:txs per block:qk]' pivot='key' type='quantitative' />
            <column caption='Txs Per Block' datatype='integer' name='[txs per block]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2038301046359461888]' derivation='User' name='[usr:Calculation_2038301046359461888:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2038301046359547906]' derivation='User' name='[usr:Calculation_2038301046359547906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2038301046359613443]' derivation='User' name='[usr:Calculation_2038301046359613443:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2038301046359736324]' derivation='User' name='[usr:Calculation_2038301046359736324:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_2038301046359736324:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:txs per block:qk]&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:Time:nk]' direction='ASC' using='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:ROWID:qk]' />
          <slices>
            <column>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_2038301046359547906:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:NewBlockMsg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:Pending txs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:Queued txs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:Txs arrival:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_2038301046359461888:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_2038301046359613443:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_2038301046359547906:qk] + ([federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_2038301046359613443:qk] + ([federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:NewBlockMsg:qk] + ([federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_2038301046359461888:qk] + ([federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:Queued txs:qk] + ([federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:Pending txs:qk] + ([federated.0hixqyd1wlu7rn17wd22b1qcwp37].[Multiple Values] + [federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:Txs arrival:qk])))))))</rows>
        <cols>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:Time:nk]</cols>
      </table>
      <simple-id uuid='{157DD29A-1649-4559-98D7-E606B362DF06}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='test' name='federated.0hixqyd1wlu7rn17wd22b1qcwp37' />
          </datasources>
          <datasource-dependencies datasource='federated.0hixqyd1wlu7rn17wd22b1qcwp37'>
            <column caption='TxsPending' datatype='integer' name='[Calculation_479351888006430720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(IFNULL(SUM([Pending txs]),PREVIOUS_VALUE(SUM([Pending txs]))))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='BlockTxs' datatype='integer' name='[Calculation_479351888007335937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(IFNULL(SUM([txs per block]),PREVIOUS_VALUE(SUM([txs per block]))))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='UnderpricedTxs' datatype='integer' name='[Calculation_479351888009437186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(IFNULL(SUM([transaction underpriced]),PREVIOUS_VALUE(SUM([transaction underpriced]))))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Pending txs]' role='measure' type='quantitative' />
            <column caption='Rowid' datatype='integer' name='[ROWID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Time]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Txs arrival]' role='measure' type='quantitative' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:nk]' pivot='key' type='nominal' />
            <column-instance column='[ROWID]' derivation='Sum' name='[sum:ROWID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Txs arrival]' derivation='Sum' name='[sum:Txs arrival:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Transaction Underpriced' datatype='integer' name='[transaction underpriced]' role='measure' type='quantitative' />
            <column caption='Txs Per Block' datatype='integer' name='[txs per block]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_479351888006430720]' derivation='User' name='[usr:Calculation_479351888006430720:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_479351888007335937]' derivation='User' name='[usr:Calculation_479351888007335937:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_479351888009437186]' derivation='User' name='[usr:Calculation_479351888009437186:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888007335937:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:Txs arrival:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888009437186:qk]&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:Time:nk]' direction='ASC' using='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[sum:ROWID:qk]' />
          <slices>
            <column>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888006430720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0hixqyd1wlu7rn17wd22b1qcwp37].[Multiple Values] + [federated.0hixqyd1wlu7rn17wd22b1qcwp37].[usr:Calculation_479351888006430720:qk])</rows>
        <cols>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:Time:nk]</cols>
      </table>
      <simple-id uuid='{36FD42D0-814A-4D40-9411-DE66711EEBD1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='77500' x='800' y='1000'>
              <zone h='98000' id='3' name='Prez' w='77500' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='209' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='20900' x='78300' y='1000'>
              <zone h='18250' id='8' name='Prez' pane-specification-id='6' param='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' type='color' w='20900' x='78300' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='11' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Prez' w='77500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18250' id='8' name='Prez' pane-specification-id='6' param='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' type='color' w='20900' x='78300' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B29AD40F-2B8E-4B31-8202-4F1F425A5A98}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]</field>
            <field>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:Calculation_2038301046359527425:qk]</field>
            <field>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:Time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF639139-C21D-48CB-88C1-0486F0ED8B07}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]</field>
            <field>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:Time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3ADC918E-0434-4A1A-A2E5-59AD206FB974}' />
    </window>
    <window class='worksheet' maximized='true' name='Prez'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='283'>
            <card pane-specification-id='6' param='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[none:Time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{620B93A1-9BD9-4631-9B9A-027CFD8D19B3}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Prez'>
          <zoom type='entire-view' />
          <highlight field='[federated.0hixqyd1wlu7rn17wd22b1qcwp37].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{30459FCC-DAA9-4807-ABA5-99F6372004CB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Prez' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d3RcyX3n+7m3c0QDjZxJgGDOmTPDiZqgMNLYklbBK1vPtuS1vO951z5r
      n2dbz2dX6w3W7lq2ZVuWZSvnMJrgyYEzHA5zAAMYkHNodM431PujCZBgdwNokCAJTH/O4TlE
      31v31r23vlW/qvr9qiQhhKBIkfco8q26UFFHRZYit0wAuq7fqksVKXLbMBZy8vjwAGPBBGVO
      I3FFRtYSmJ1lNNRWLVb+ihRZVAoSgKIqpFMpNLcNq1EDawloaXRdR9f1ohlUZMlRkAAcDifO
      tITDbCSumZGVGGZXObIsI4TAYDAsVj6LFFkUpFs1CqRpWlEARZYct6wTXKTIUqQogCLvaYoC
      KPKepiiAZcCrl14klAje6WwsSYoCWAacGjrOWGT0TmdjSVIUwDIgnAwRTPjvdDaWJEUBLHEE
      gnAyhD9eFMBCKApgiaPpGkklgT8+eaezsiQpCmCJE0/H8DoqCCdDdzorS5KiAJY4sXSMKlcN
      kVS46Iu1AIoCWOJEUxEqnBWk1BSCogAKpSiAJU44GaLE6sEoG1E05U5nZ8lRFMASJ5wM4baW
      YDFaSKupO52dJUdRAEucUDKE2+qhxFZKMBFY1HtNxiZIKslFvcftpiiAJU44GaTEVkKZvWzR
      5wKeOfdz3uk5sKj3uN0UBbDECScyJlCZzUsgsbhzAcOhIU4NHl/QaFM0FUUXd1/ceFEAS5yE
      msBqtFHq8C7qZJgQAl3oJNUkSbVwM+gbh/+ezolLi5Czm6OgkMiAb4yBUT815W7imgGDEsPs
      8lLp9SxW/pYtE9ExoqkoK7wtN3UdVVMxGoyU2koJxhevDxCIT+KxldJQ2sj50XZ2NOwuKP1A
      sG/R+ygLoSABeLyVRBJpUqpA1pMIk41UPIJe6i4GxRfId479M1ajjc/t/b2buo6qq0hCwm50
      EE6GUFX1FuVwJgOBfmpctWyu2cYrl19gS832eadNqUkmomNMRCcWLX8LpSABaKkITk8FyeAo
      cU1GToUxu7zFoPgCOTt8BrvZwWTMh2yQkaWFWaJJJYHFaMFkNFFi9xBLxzAYDEiSdItzDMOR
      IRrLmmj2rmQ4PIQkSxjk+X3vLv8AbRVrCCT8GI0FFblFp6A3b7S6KXNZqW1opnVFIytXraG+
      umKx8rYsUTWFZ8//nI9t+RR2s51IMrzga8XSMRxmBwAGOVPwVX1xatjBQD/1nkYkSWJF2Up6
      JjvnnbbX3822hl34475FydvNUOwE32be7n6T9dUb8TrKaS5bSa+/e8HXiqdj2K8KAMBkMKHq
      izMbPBEdo8KZWQBtW/1OTg4em3fa3skuNtduI5QIzctMFkLcNnO6KIBFRNO1GR8ylopysPsA
      j635AACrKlZz5SZGRqZmgadwmp1EU9GFZzgPuq6jCx2jnDFf1lSt49J4B2Kew5pjkTGq3TXz
      8lUSQvBG5ysc6Tt0U3meL3eXQbaMEELw5de/hCTJrK/eyKa6bRzqPsDDbY9hNdkAaCht4uWL
      /4oQYkF2+40CKLVnhkIrnJW37DkAfLFxvI6K6TyaDGY8tlImohNUumZfFjOtpjEajEhIyJKM
      LnQMUv6+w2hkhDevvIrbWsKe5ntu6XPkotgCLBLhZAijwcy/u+f/odxZyQsXnmE8Os7upn3T
      57gtJaTUJGktvaB7hJIhSq4TQJndS2AR5gKGQkPUltTN+G3rPM2ggWAfDVf7Dh5bKaFZhkI1
      XeNbR/+R3977BTRdu6n+0XwpCmCRuOK7xKryNlxWN7ub9vG5fb/Hv9//BzNGTiRJotJVzfgC
      A9rDV/2ApihdJHeIwWAf9Z7GGb9trt1K+/CpOW31Xn83zWWZuQ6v3ctkHoEKIXix4zk2VG+m
      obSJ7Q27OD5w9NY8wCwUBbBInB9pZ33NpjnPay1feD8gnAzOMIEWqwUYDPbTcIMAXFY3mq7O
      OSvcM9lFs3dlJn+OciZjuUeChkKDtA+f5Il1TwKws3EPx/sP34Lcz857QgCKptzWSTpd6AyF
      BrNqzVy0lK+ia/LKgu4TSUVwWVzTf7utJYsSGumPT1JmL8/6fVXFmjndG0bCQ9S6M+aT116e
      cyh0yvT5jV2fm24hp4S92OsdLXsB6ELny6//Vzp9l2/5tQW5h+smYz5cFhcWo2XOa1S5qpmI
      ji/IUUzRFEwG8/TfLoubSCpyS8U+Na+Qa9JrbdV6OsbO50+rqUjStYk+r8PLZCy7hRoI9FHl
      qqHmun6GJEnsaNzN8YEjN/sIs7LsBXBpvAN/fJKzw6dv+bV7Jrt45tzPs4b3Lo13sLpy3byu
      YTKYsJlshK/r8AkhmIiOkVDis+68o+oKRsO1gTyL0UJaS99Sr8vxyCgVzqqco1Qt5W10+S7n
      FdxQaIC6kvrptGV5WoCBYB8rva1Zv29vKArgptCFzgsXnuFz+36Pzlk+1EIQQvDa5Zc42P0G
      4cRMs+PC6FnWVW+Y97VunBC7PHGRrxz4S/7mrS/zF698kb9+68u823twRhpNVxGCGUOKkiRh
      ko0Lng3Whc7bXW/MENBQaJC6kvqc51tNVgBSeSLRMh3gldN/5zPRBoJ9NJRmm4suiwujZFxU
      J79lLYAu3xUcFiet5W3IkkwkdeuG1aKpCJOxCT688aO80fnK9O+arjIRHafaVTPva62qWE3n
      xEUAxiNj/OjUd/mDB/+E//TwF/mTR/8zn9z2GV67/NKMghlPx7Gb7Vk1s8VoJbUAd2XIvK/v
      Hv8X3uk+MF1ZDAb7Z+3LtJS35TUve/zdrCi75u0qSVLWVJgQgsHgAHUl2feYMoOODSxeZ3jZ
      CkAIwb9eeIYPrPswkiTNe9Z1PDKKLzYx53mH+95hV+M+djXu49xIOwklDsBoZJRyRwVGg2ne
      eW0sbaY/0Ec8HePr736VX9/5W5TaSwGQJJkKZyUOs2OGmRRXZrpBTOGxlxFY4FDokb5D/O69
      v8+BrtcZCQ8BcwtgbdUGOsbO5Tw2FOynztMw4zeDZEDTtRm/JZUEdrM95zW2N+zixMDRBa94
      EUwEZm35l60AevxdmAym6Q+wsWYLZ0fOzJnujSuv8szZn816jqZrHO8/wq6mvZiNZnY27uGd
      7rcA6Bg9x9oCzB/IdF4TSoK/f+crPL72gzSVrcg6Z6W3lW7ftdGiaCqK0+zKOq/MtjABaLpG
      t+8K66s38dndn+dfjvwjaTWVmWyz5Y/3aK1oo3Mi27zUdG2G+8QUpfZSAtetYxpL5xbyFA6z
      E4vRwkRkrOBniqfjfPFf/xPHZhlOXZYCmFH7kzER6j0NDIcGZu0gCgRDoQG6fJeJpWN5z+ue
      7KTKVY3z6hDkfSsf4EjfOyhamovjF1hTNb8O8BSSJFHvaWRN5Xq21e/Mec7qyrVcmuiY/vtG
      N4gpFhoZ1um7RLO3BaPBSF1JPfeuvJ/vnfgmsiTP6rpgM9kQQietzewHjISHqXbXZploZfZy
      /NfNBczVwkiSxMNtj/PSxecLeh4hBC9ffJ7H136IFzqeJZ7je6bV9PIUwGCwHyEEjaXN07+Z
      jRZKrKVMRPPXJIqmkFST3LPyAU7kGX0QCA50vsb9rQ9P/2Y3O1hTtZ7DvYcIJ0OU2wt3Ef+1
      HZ/l/euezOsT1FjazECgd7qmDV0Nhr+RMrt3Rg07X470HmLPdW4a+1seIqEkqHJVz+mn1FK+
      ii7fzLmMd3vfZkPN5qxzvY7yGbPBmQ5w06zX31Czib5A7wwTcC7CqTDnRs7w6Jr389iaD/Cz
      Mz+a0UppusZ3jn9jeQqgL9DD+uqNWR9uXfUGLozmH7cOxCcptZWxb8V9HO59J6ftGE1G8MUm
      ZnTuAB5a9RhPn/0Jte46ZLnw1zrlz58Pu9mBgOm+xvUtwMGz/UQTGX8ij81T8KiJpqv0+rtZ
      Wb5q+jdJkvjs7s/z4Q0fnTP9mqoNM+YDRsPDdE5cnuH3NEWZ3TtjNjjXLPONyJLMQ6se5bXL
      L87ncRBC8Pz5X/D4ug9hlI3satrLZNw3PeGo6RrfO/4vVDgql6cAEkoC21WPy+tZV72RC6Pt
      edP1+rtp9q6kxObBaXExGOzPOudI3yF2Nu7JKuSl9lI2123LWevdKho9mc4yQCiRWREO4PWT
      PfSPZYYXXRY34QJHuy6PX6SlfFWWvW4z2Sh3zt2aTQ0wTPnxf+/EN/nk9l/PGenmdVybCxBC
      MBwaosZdl3Xejexq3Ev78Kl5rUvki03QH+ibNidlSeZT236dH5/8Lmk1xQ9PfhunxcWHNvxK
      YQLQ0kn6BoaIhvyM+0P4xoYJx+++hZKSSmLa5fh6yh0VhJIhlDzel92TXaz0tiAhcd/KB3m7
      +80Zx9NqisN97+Ss2SBjxmxv2HXT+c/H6sq1XBrP9AOubwH84QRjgUwcgNPsIpaKzNtXH7j6
      TAt3Pbab7Wi6iqKlOdZ/mEpnFU3XmZ/X47WXXzcbLNB0FdM8RsyMBiN7m+/j7e43Zj1PCMEv
      z/6UJzf86gwBVrqq2FK/nS+9/GeYjRae2vRxJEkqLB6gt7sL3epmMhhB6BqSwUg0OYazoeGu
      CoqPp+OYDZacAdg1rlp6J3uyTBiA4eAgj6/+IKqqsqp8Nb88+1PiqRhmg4W0luKfDv8d+5r2
      YzXY7khwd6OnmQNdr6OqKvF0DLNsRlFU/OEEw77IdJ4sRiv+mH+6hZgNTVfpD/TR6Gm6qWdq
      Lmvh3HA7z59/mj948E/QNC3neTZjJgxUVVUCCT8lttJ53/ee5v385RtfYv/Kh/J2zIdCg4QS
      QdrK12Rd96HWxyixlLKrae90/goSgNPlYnBkkpJSG2nVgKwG78qg+JSaxGFx5gzA3li7hY6x
      c6yqXD3j97SaIq2l8NhLr9YMRjbUbOLcaDsba7fwtXf/hl2Ne9m3cv/0yNLtxussJ5GOoaOh
      CQ2LyUoyreFxWZkMJaafd2v9Ds6NnpnRUc/HxZELtFWswWya229pNtbXbOTrh77Kp7b/Bm6b
      O+95meAfMBqNDIcHaSptnnegvNHoZFPtVk4NHWNP8705r/3SpWf5yKaP5bymESP3tOyf8VtB
      JlBVXSPbd2yhtWU161a3smb9JlY2zm2/3W5SaiqvI1pb5RouT1zMaq0m45OU2b0zOqL3rNzP
      61de5qtv/2/2rdjPPSvvv2OFHzId0yp3DaOREVQ9sx5QOJaiudqDP5KYfqbNdds4PXRyXi3y
      kb532N2c26QrhLaKNWyu28reFdkF80YMV9018rlAzMYjqx/n1RtmxacIJYL44/6cfkX5WJad
      4LSWxnydl+T1uCxuJEnK8kvPdIBnmkXljkrKHRU8tOrRvHb/7aatci3tw6cxG8zIkow/kqS6
      zImuC1QtUyjKHRXE0zHiV0eM8qHqKsOhQZpKsyfeCsVudvC5ff9+ziVeJEmi9Opk3UCgn3rP
      7EOgN+KyuGktb+N4f/Yw9Rudr/JA6yMFhZcuSwEoWnqGm/D1SJLEvSvu5+ANHdyeyc6sVdok
      SeK39v4u2xpyT07dCVrL22gfPjXtOjAZiuN127GYjaTSGbtWkiTW12zk/CwjXpDx/Wkua5n3
      +j63ijJHZih0IjZecPyyJEm8f92TvHTxuRkuFWktTfvwqYIHIZalAGZrAQC21G/n3Gj79IYS
      QghGwsPzGo6701Q5q5iIjmE3ZdwHJsNxyktsVHjsTISuzXZuq9/JqYHZF7I9MXCEHQUUmI6+
      CcaD+WfI54vXXo4vNj4dKF8oLqubddWbOHydh+yJ/iNsqds2rxGl61l2AhBCXG0B8r8Ii9FK
      a3kbF0bPAhnBpNU0TrPzdmVzwciygRXeVtzWTEfTF0rgLbFTXeZk1H9tSZS6kgYmYmN5A+6F
      0OnyXaG1om3e937hSCdPv53df5oPvlB82kTzOsq5MHqOKld1wdcBkJB4fM0HePXyS6iagi50
      DnS9zgOtjxR8rWUngKnO0VzN+v6WB3mr6w2EEEzGJvA6yhdlScHFYHXlWkpsGW/RQCRBqcuW
      JQBJkmaNNx4I9lPtqs1rKt6IEJlC3DMcmJ51LoR/fOYEF/sz/a4yu5czw6doKND+vx6Hxcm2
      +h0c7D5A72Q3ZXbvrE57+ViGAtCQ52HT1rjrSGspJuM+eia7b3qV5kIJRZOM+Re2iNVDqx6d
      HuJMKRpWk4GqUgdj/pnmyZQrcS5ODBwrqG8TTaSwW0y8b2cLr57oKSi/Qgg6h/yMBzL58zrK
      CcQnCx4BupFHVj/Bga7X+NeOZ3jf6icWdI1lJwBN12b1XpxCkiTuWXE/73QfoMffmXNibLFQ
      VI2v/PQIP3o9v1/SbJgMJswGc8bcUzVMRgNlbhv+cILrrZOV3lb6A72o2swJISEEHaNnWVe9
      cd737B0N0lzt4d6NjRy5MIii5p7oysVkOIEARiYzgs+4OFvntWjAbNhMNnY37cMf882IPCuE
      5SmAeY5qbKnbzrmRMwwG+6l21y5yzjIIIfjpgQ7Wr6hk4jq7eCHEkwo2sxFZlnDazMRTyozx
      cYNsoN7TQF9gZo09ER3HZXVjNVrnfa+uoQCtdWWYTQa2rqrmaMfQvNNe6p/kvk2NjPoj079t
      rt06r5nquXik7XF+b/8fLNh8XXYCUIWW5dSVD6vJysryVYST4elVlhebE5dHGJmM8JH7VlPm
      tk2bBQshHE/hcmQm/CRJwmwykFZm1sw7GnbzxpVXZgwZnho6zpa6HQUVms4hPy11mX7Hoztb
      ePlY97w7w5cGfOxd33C1hcosA/n7D/zRLelzGQ0myuzeBadfdgJIKUksBdRsD7Y+wt7m+xal
      A/z6yR6OdQwRTaQRQjDmj/L02xf57Q9uwyDLbFxRybme8QVfPxBJUuq89qweh5VgdKZz4vrq
      jZTZvXzt0F9PB4WcGTrJ5rqt876PEIJAJEmZO+NgWOrKDLteGZxf3EHPSJCW2lLuElexGSw7
      ASTV3J6g+ah21/KhDU/d8nzEkwovH+uieyTI//rhIf7bdw/yf35ymM8+sQWXPVNrr19Rwfmb
      EMBkOI635FosbbV35kgQZIZNn9r8cXY17eN/v/nf6Rg7jyzJuCz5/XVuJBJP47CakK+rJD6w
      dxXPvTv3ShuKmlkh22SUcdrMRBOzL98uhODKoJ++0cVdEGuKZbc6dL5YgNvNhd4JtrRW828e
      Wo8QgmA0STieoqnqmt1bVerEH0mSVjTMpsJnYydDCWrLr8UF3zgUOoWExI6G3dS46/i7g3/F
      A60PF9Ti9Y4Gaa7xzEjTXF1KMJokmkhPCzpv2upM2oxAI7jymCxCCF490cPb7X0IAX/+2fsx
      LCC4qBCWXwugZHZNvB79Nm64MMWRjkF2r8vMLEuSRKnLNqPwA8iyRK3XyZBvYcu1+EJxvO5r
      z5oRQP4+RV1JPV987Es8WOCEUeeQn9a6shm/SRJsW1VDe9fsweqX+idZ3Zgp8DVe5/RI0I2k
      FY2vP3eSnpEAf/qZ/WxqqeKVYwvfPGS+LDsB3NgCCCH42i+P0zd269fMzEdKURnzx2iozI7Z
      vZFNLVVzFqJ8+COJabscwFtiYzI0uwOcxWgtaMkWgK4hPy21pVm/b2ur4eTlkVkrl0sDk6xu
      yKwrWlPmyimAlKLyF999m5U1pfz2B7dhNhr48D2rOXCmL6tPc6tZdgK4MRqsbyzEma4x3j0/
      eNvycHlgkpa6UoyGuV/vmsZyLvb7FtRCJVMqNsu1wuxxWgnFUrd8BbxgNInHlT2w0FDpZsgX
      Qc9zPyEEE8EYFZ5MP2XKBLqRS/2TrKjx8MiOldNmltlk4OMPruO7L7cvauu97ASQUK+1AEII
      fnnwEr/z4R1c7Ju4bWbQ4QtD7F6XeznBGylz24gnVZLpa5NVsWSaL337Lf7yB4f4x2dP8LMD
      HdNuBFMIIUirGibjtU9okGUMskS6gEmq69F0nRePdM4o0KFYCqfdMqMDPIUkSTRXe+gdyd1h
      DUaTeK4bparw2JkIZrdQl/p9rG/O9grd0lpNStHo6Fu8zfWWnQCubwEGJyIkUgqbW6oocVoZ
      zmN/LpSJYIzjl4ZnCEtRNfrHQjlNhlxkClEJvVdHPTRd5+vPnuSBLc381ge38ujOFuor3Xzn
      pXZ0/dp9kmkVi8mQ1Um0W03EkgvbKO9S/yTff/UsB9v7p4cse0eCrKj25O00b2+r4cTlkZzH
      Lg/6aWu4FmRkkOUZzwDXRn1WNZRlpZckic88tonvvXJ2wROGc1V6hQXFqwqRaAxVSZNKK6RT
      yZuayVwMEkoCm9GGEIJn3rnIk/eszqwxubqWE5eG50x/tnuMjt65l0bUNJ1vPH+KH79+nsuD
      19a56R4O0FDpxmSc/6jOppZqznSOTbdYVWVO7tnYQKnLRnO1h91r6/C4rExc54ocjqVyjr5U
      lzoX7GP0zrkB/sPH9/DikU784UxNnasDfD0bVmbmMnIVtMv9PlY3zBzxsVqMJFLXBCrITOiV
      OHLP3ZSX2FnbVD6vb3cjqqbzP77/Ts6RMciIoyABDA30MeEPMtDfR09PLz093fQNDE4vh6Hr
      +h3/N7V59MhkhGAkyZpGL7qus2llJWc6R+dM//rJHn72Vsec5718vJvGSjd/+Im9fOvFM0yG
      M0uZH7kwxK61dQXlubW+lCuDfk5cHqFz0M9H71+b9T63tFRx6sq1/AeiSUqclqxrVZU5GJmM
      FvzeFFWjezjAhhWVfPp9G/nG86fQNJ2uYT8raj1501lMBowGmVAslXWscyjAytrSGb9VlzoZ
      mYxM/z06GaWq1JH3+kII3rdjJa+e6Cn4mV470U1a0fjlwYs5j5+8PFKYAJxOB+OjYyDLGA0S
      RqMJ+bpNIqaEcCf/pdQUJtnMLw9e4kP72qZ/d9nNGA0yk6F43rSKqjERjCNLEsO+SN7zhn0R
      Dp8f4Kn9a/G6bXz6kY38/S+OkUgpXBmcpK2+rKA8O60mVE3nJ2+c5/NPbkeWst/lxpZK2rtG
      p//2BWN43fas86rLHIxO5s97vn8dfROsqi9DlmBNo5eqMgevn+wmFE3htptnTbultYrTV0Zm
      /KZqOqqmYTbKWfkbue7dXuqfoK3BO+v1y0tsSMBYIDrv5wlEEhw43ccffmIvY/5YVtpUWuVn
      BzoKmwhzuT20tTlwWo2kdRlJS2G0Ou+qVSEUXSEc0/CFEmxYWYUsX7Ndt66q4UzXOI/syO05
      ODwZpbLUwb71Dbxxuo9/+2j2Hl+qpvOtl9r5zOObp0dg1q+oZGA8zP/5yRGqypzYrfPzsb+e
      J3a3UlvuosSZ2xSoKnUSTSqkVR2bxUQgkqSixJ71zitLnRw401/wt3j3/BAPbm2eTveJhzbw
      //3Lm5Q4rBgNs69at72tlp+8eYH7tzRPn9cz4qexqiQrH7XlbvrGQtO/XxkM8PD2FXPm9+Ht
      K3njVB+femRuD1YhBD96/QIffWAddquZj9y3hmfeucznn9wxffyFo5e5b3NTYS2AyWKjzOPG
      bLXjtFtxuEqwLGAGczFRtDSdgyF2rKmdUfgBtq/O32EDONs9zsaVVWxqreJyv2/GyAxkgkJe
      OHKF1Q1eWmpn2sWP7mqhuszJPRsX5uK7Z309jVX55w0kSaKt3svlgUx/wxdOzHCDmOKaW/T8
      R7wUVaNvNDij424xG/mtD27j/i1Nc84a15a7GPVHpzu4Q74w3/jXUzy8PbuiuX4oVAhB31iI
      puq5vUK3tVXT3jU2rz5nR5+PRFpl66pMxNmGFZWMB+LTfaPJUILTV0Z5346Vy28UKK2mSSsS
      bnt2LVxeYieVVonEc+9ocqF3gnXN5ZiNBja3VnPs4kyX38sDPk5dGeXJe1dnpZUlid/64Lbp
      l74YTE08wVQwfLbLh8VkRBeCeGr+I0EX+nysbizHcMO8RWtdGfs2NORJdQ1JkmipLaNzOMC5
      nnG++vNjfOEjO3N2nqtKHYxd9YBNKxoGgzSv+RKT0cCmlqrp58+Homr84LVzfOaxTdPClWWJ
      j9y7ml9cDef8wWtn+fiD6zEa5OUlACEyS+2lUjoOW7YAJEliw8pKznZnO6Cl0irhWIqKkoxb
      9ANbmzlwum+6Jh0PxPj2S2f43Y/sxFzACM+tpLWujO6RIJquk0gp2K25Z3Q3Xx1Vmi+HzvZz
      z8a5C/psbF9dw7dfPM3PD3TwR5+6h/rK3M52RoOMqmZq8a7hQFZLOhsPb1/Jqydmd494+Vg3
      29tqqPDMdG9fv6ISXyjOm6d7UXXB+hWZNU+XlQC0q+GQsaSCI48dvnNNbVbNDtA/Hqa+0j1t
      NnndNhw2M31jIeJJha/+4hiffWIr5TnMjtuF2WSg1GllPBAjrep5h1p3r6vjyIXBeZlBiqox
      OBFmRc3NBaesb65gw4pK/ujT9+Ttx0xhMmbiFi7lGCadjUqPHQnyxlDEEmkOnu3niT2rso7J
      ssSH713DPz9/mk+/79rK4ctLAFfDIeNJBbs1d/++ttxFIJLM8plp7xpjU0vV9N+SJPHI9hW8
      dLSTrz1zgsd2tdBaP//aarHY2lbN4QtDGGUJg5zbNq8rd+GPJEmk5l5z81zPOGubKm7a69Ji
      NvLJRzZiMc0+riJJElVlDsYC0emJsvkiSRIPbVvBazlaASEEz757mUd3tuTtl65fUcF/+/zD
      VF7XOiw/AcgGUoqKNc+HMMgyH753NT9+88KM4dtLA9m10dqmCi4NTNJQ5Wbv+vm5Niw2G1dW
      cehsPy6HJW/nVJIkNrdUcaZrdM7rvXXm5s2fQqkpy3iFZla0mH/wEmT6QWe6xhj2zfQpCkaT
      nOseZ/+m/IMQsiRRXzHTNFteAhAZASTTGhZz/ppoc0s1kXiK7uHMRhLxlEJa0Wb4rUDGXv2z
      z+znqfvW3jVLpnjdNgTknTmdYs/6eg6fH5rVDOofCxFLpLPctBebGq+Ls91jlJdk73I5Fyaj
      gS88tZO//cXRaU9RIQQ/f+siH753dVZHfi6WlQAULY1JNmVagFkEIMsSn3hoA7nsM6wAAB63
      SURBVD964zy6LugezsxY5voYpS5bXlPjTiBJEtvaanKOAF1PxgxK5DWDhBB8/9WzfPKRDVnD
      xYtNtdfJ2+39BZk/19NQWcKnH9nIV356hGRaZSwQY3AixPbVhS9ssKwiwpJKArPRiq6LOQtt
      Q6WbqlInxy4O0TnkZ/N19v/dzvv3rJqzgytJ0nSswZ4c5tupK6N4nFaa5zEGf6upLnMSjCSn
      A2UWwrrmCh6OJvnqL45iNMh89IH1OT1W52JZtQAJJYFJtmA0yHM2rZIk8av3r+XZQ5fp6PPR
      MovD192Gx2ml1DV32OeedXUczjEapKgaP3+rg48/uP6OmHYWU2YdoxU18/OYzYUkSdyzoYHW
      Oi+ptMa6pvIFXWfZtQDGqwKYDx6nld3r6jnaMZR32HQpU1/hZjKcIJmeGTjz2oketrfVzEtE
      i8X//J333fR8iiRJPHlPG+qe1uK6QJAJhjFJ8xcAwOO7WvjCR3Zyl/RxbymSJLFpZSXHL42Q
      SCkkUgq+UJy32vt4Ys+qO/bMkiRR7rk18ymSJBXken4jy64FQJiwzdIBvhGT0UC19+5fFXqh
      3Lupkb9/+jhvnuoFMs58T923ZtZBgvcSy+otJJQEmmrI6QbxXqXG6+I//+aDdzobdy05bYVI
      OEI8HOH274N4cySVBJpqLAqgyLzJEoAQaV569jkOHjlxJ/JzU0y1AM48TmJFitxIlgAkyUzb
      ujZGe3tYWGj1naPYAhQplJx9gFKXFU/jCm5u59jbT0pLoalSUQBF5k1OAfiDEcxqGgVmiEBX
      kpxov0RVmZ24IiNrCcxOL80NNbcnt3OQVtNoaaloAhWZNzkFYLfZcLilLPuou/MKsWgUtbwU
      u1kDgweEMiOC/06SVlNoaYHVbEBVl1oXvsidIEsAmYh+NadXXevajVTXR9GUBAnNgKTEsLjK
      75qgeEVXQDfgsFkwGpfVCG+RRSKrlCQjAS5c6sEkW1CAG40Jp8sJOMmEb989/jNCCNJaGqMm
      Fyd5isybrGre5i5jz85NWEs8LKWupC50JCTSil4UQJF5k3MizO8foaejb0lNhGm6hizJpFXt
      rluqpcjdS46JsBQSblrX1TLUP/sSFHcTmtAQQsYgz+0KXaTIFDlbAEVRMZvtVFYs3F/7dqPp
      GkJIGA3Fwl9k/uSYCbZgIIkwmLDaCgtYvpOougJCLjgmtMh7m6zeYjQwQVQzUlXhZSlZ0kkl
      iYwJ8xzLchQpcj1Z1aXBYECWYKC3d0l1gqf9gIqzwEUKIKu6tDhK2LVnz4ICjO8kCTWBrhpw
      5FgTtEiRfGQJQL4LljhfCFMtgNNWbAGKzJ9l02NMKAk0zbAsg9uLLB7LRgDJqWCYoit0kQJY
      NgJIFDvBRRbAshFAUo0XA+KLFMyyEUDi6pIodkuxBSgyf5aNAFJKCqEZsZiX5ihWkTvDshFA
      Wkuh68VYgCKFsYwEkEboct6NMYoUyUVBpSXsn+BS3wiVJTbiqoysxjE7vaxoLHxd9ltNUklh
      NlqQb3KrnyLvLQoSgMViwSjLYLRglzUkmweh3x1B8fFUEpvJgqYtJQ+mIneaggSQSqcp8ZRS
      6rJcFxRfeceD4nWho2gadqOpGAxfpCAKKi3u0nLcV2NkMluN3R0BM9eCYYrmT5HCWBYlRhca
      mkZxDqBIwSwLAWi6Riqde3f4IkVmY1kIQJJkPOYaHEVX6CIFsiwEYDPZeKztV3EWXaGLFMiy
      EABALJEutgBFCmbZCCCaVIrBMEUKZtkIIJZIF4NhihTM8hFAMl0MhilSMMtGAMm0WvQELVIw
      y0gAWlEARQpmGQlAxVIUQJECWRYCEEKgFJdFL7IAloUAVE1HlqXisuhFCmZZCEDTRSZOoUiR
      AlkWpUbV9KIrdJEFIYlbFMaladodC4jRNJ3+8RArau6O+IQiS4dlIYAiRRZKQeOGkYCPvtEA
      Xpf5WlC8y0tdVfli5a9IkUWlsKB4mw23S0FDwyyrYHOhpxN3RVB8kSILoSAB+Cd9JJM6JQ4T
      CSzI6Rhml/eOB8UXKbJQin2AIu9pimOHtwkhBJF4alGufen1M0R9oUW59nKnKIDbxMB4mP/4
      1ZeJJdK39LpKUmHgVDc9Ry5DsQtWMEUB3CYOnOljXVM5z717+ZZed/zKEI07WgmPBUgnkrf0
      2jcycLqbie7RRb3H7aYogNtAWtW41O/j80/u4EKvD18oTjqeIhW7+QI7fLaX+k0raNi8kv6T
      3QAEIolbPiIXD0TpP36Fy2+0M9k7Riia5IevnSOeUuaVvu/4FeKB6LzOTaQUwrHFMRdvpCiA
      W4QQgqMdQwyMZ9vi53smWFXvxYTgwVo3b37zVY7/6C2Ofu9Nor7wgu+ZjCTQNB2bx0HtxiZG
      Lw7wzpk+/uPfvkzPaPBmHmcGQgjOvXCcdY9vZ9vH7+Pdpw/zD98+gK4Lvv7siTnFNnC6m/6T
      XVx569yc5woh+PbzJ/nzf3qNb75wmvFA7JY9Ry4Mf/7nf/7nt+JCQoi7dmVmTVGRFsFbVE0r
      JEJxjBYzPztwgaMdQ5zrnmDfhgZSkQTHvvcm/Se66D52mdpkkvGLA1RXlnA8obPr8W2sXNfA
      macPk7SY+ZvnT3H04hA2i4kKjwNZzuRVF4LxQIxgJInbYZlx/4HT3bgrPXjqvMgGA5NjQU6c
      G+SzH9/Lt148wz0bGjHcAh+p4XN9aGkV6sv52nOncDdVsT4aY9/eNnoDcUb9MVrrSnO+34mu
      EfqOXWHPZx6i9+hlvM1VhBWVt8/0s7LmWho1rTJ+ZYhLb7Sj942x2WrEWenhl8e7Od05ytqm
      ikWJ91jWAtBVjb7jnbQ/c4R0LIW3uXJOEehXa6i5zkvFkpz88UEGT3fz9uVRhMPK55/cQfew
      n7A/yvib7ax9dCvVO9t4vj/Ar//mwzRsbcHbXEVVZQk/PXCB+3a20h5McOmlE+zftYq9O1s5
      0jHEz97sYHQ8xKETXfzyxdMcOXSRd45cwVHupqHSjSRJCCG4+OppVt2/EaPZyJAvzA8Pd7LP
      KrPp3nWk0iqnO0dZv6Ji3sJPhGJcfO0Mdo8Ts92CJEmkEyne+dFBjhnNnOoe55OPbOCeLc1U
      rqrlzNPvsmv7Sp450UNdhRuv2z7jeuHRABdeOsmOT+zHZDUTVHTefu4YL/RMkkwrDIyHWddc
      wWTfOCd/8jayychPuyd56t8+SMumZoInO9la46FqZTXffPEMO9fWYS4w5kPXxazPvywFIIRg
      onOEIz99h2O9E5yz2fF1DlOia5Q15RdB93CA5370NqHLQ1Q1VmDKs8xKPBjl5E8OUralhZd9
      cVYlE2xq9FLWUE6Dx86733+TnU/uonJFNW+d6aPW66KtoXz6vh6nldOdYzz99kW8XhdP/coe
      xg5fJNDRT1k4RrOm4IomaLIa2d5Uzu4NDTTqGs8fvkLaZqG1rpSYL0xwaJL6LSsJRVN85aeH
      +e2P7EQZC2J12Vm3to7nDl2mxuvMKpi5CA5PcvoX71LVVkf3kUv4ukYIIXH2ldMMmS08sH8d
      H7lvDWUuG5IkYbKYqFpdT8dLJ1nfXMF33u1k97o6LFc3KAkOT9L+zBFWfWAnJ/p8fP+Vs/SG
      E6zSFD72K7vZt2UFzx66jEXXGTnQzq5fe5BeDTSDgfs2N2Gymand0ERsIkzwZCe1dV5++O4V
      dq2Zvwh8vghf+/ordA35qaoswWm/2oIKUFJpAoO+5TkRNny+n6d/fJBgQxVbNjSydVU1z71z
      mdCxS3zksc203LNuhggSKYWfvnmBiye7eX9dCfHyEoZOdLJzRwst96zDel0BCo8FOfX0u4xV
      eWn3RfnkIxtZU1/GhRdPIAREfSEmvB5STjsfe3Ad/+Vbb/F//+puPC7rjDwGo0n84QQrajxI
      kpRxJdFFxvSRss01NaVw5AcHeM0XZ/W2FjYJhe5Iml4hMTAe4jOPbWZdcwXB4Um6Dl5g28fu
      ZTwY429+dpQ/+8z+Wc2H0Y4B2l8/Q3xVA2dHgqTSGq0OEysSCexOK9s/dm/eyk1TVNqfPcrl
      iQhHFdjstdOYSHKud4IxrwdTiYPtq2vYva4er9vGZO84g2e62fKRvQTDcX7y5ad55FP7qWup
      4Yv//AZ/+pn9M5a3EUKQCMbofreDs6d7iVd4+PSv3Y/VZkYIQSypoOti2jxU0yoTncMMtvcy
      MDjJ2s3NpBNpxgZ9WCwmSspc+EYD9I2HGUlry1MAZ549glbtZeuOlumCJITg3XMDnH32KA/e
      txapuZq+8RB9oyGuDE5yb2sV7q4hdn/6AQxWM3/386NUqgpNqRS6rk9fe8gX4aTRwtYtzXz4
      3jXTgfhCF/SduILT68bTVMmXvv0WH9zbxlvtffyHj+25Jf2PdDzF0R8c4LQwUD7hx7ZvPZvb
      aqmrcGEyGqaf88LLJ1GTCuuf2MGb7f1c7Pfx+Se3T58zha7rdL/TwUuvnGGsrpK9m5vYt7EB
      l82CLEsIXWRa9jn6EUIXXD5wlu6TXdS01lC9rYWobMBtt1Dhsc94diEEh7/9Ops+tIvOt88T
      tVp4dSTM+uYK7FYT79+zKvc9hCAdT9F99DKdp7sZtFoZMpqwWEwEIgn2rW9gT6WT3nc6kCtK
      +GXXBL/zyXtZUVs6/axXesY50d6Po9RJTVUJjVUly08AQghe+fsXWPmBXbQ2ZXupjvkitL90
      kr6uETxbWtm0dQU1JTbO/uwd1j++nZKaMiATZP/lHx7ig3vbaKx0c+ziEEc6hrGajXzykQ3U
      V7hnLdQdfRP81++8ze9/bA87Vt+6LaSS4ThHvvsGnvpyNn1oV848CCEYON3N0JkeNn14Dwcu
      jXDqyihfeGonHmemJYoHopz45WGCsoG1D25iRV0phpswYYUQaIqKwWScU+yTvWOcfvowlatq
      2fD+HbxwpJOXj3Xx5d99dM7AJiEEyXiK3kMd+Ad9rH1oMyaXjee++TpxRcOyvokLI0H+rye2
      0lpfNme+l50A0ok03/9fT/PEF95PVakz5zlCCKITIS6+fgazzYKSUqhZ20DdxuYZ54VjKf77
      9w5it5rYuaaWXWvr8Dit86rNhRC8caqXezc2Ftxxm4tEKDM0aCtxzHpeYNDH+ReO07i9lYGE
      yvMne/nNj+zENB7g5Jtnadq/kU3bV95UwV8IQgh6j16maUcrssGAEIJ4UiloeXshBPFAlIuv
      nSHmj7DufVtxNZTz1pl+VlR75lX4YRkKYLJ3jG99+wD/7o+ewjbHhhlCCCa6RohNRmje1Zaz
      YKuajmEJB9wnowkGT/eQCMWIh+L4JkJoLjt7P7yb8jLnkn2uKYQQmb7TAod7l91COoEBH0m7
      dV6LZEmSRGVrLbTmP2epxxpbnTZa7103/beq6UgSt73WXywkSUIyLFzEy04Ak4M+jKVLv2Zb
      LJa6oG81y+pt6JrGxFgQ6xy2cZEiUywrASTDCfwpjQrP3BM/RYpAgSZQIhommtYx6qmrQfEx
      zE4vXo9rsfJXEIFBHymHlVpPsQUoMj8KDIq3E4j4SKoKQtfQDSbUSIBSt+OuCIr390+gOKx4
      3VZUtbhjfJG5KUgA0XCA4aExKsqdpDQZKRHE4iq/K4LihRBEfWHSViuVpc47smO8NnQKyVGO
      7GnIzp+aRO16A2PbY0jSsrI8lzQF7hRfwY4dFYuVl5tCTSkgBHFNz3Ibvi337ztE+vA/gMmG
      7cmvIBmv8/0RgtShr6JPdKANn8ay/w+RDMXdbO4Glk1VFJ0I4yh3k0gqOEygxydv273VgaOk
      j38T25N/jXHV+0i/+3czzEG15wAi4cf21D8gl9SRfOWLCOXWhi8KoaMH+lA6niN15GuI1Pyi
      rwq+j66ijZ4ldeQfiP/8cyiXXkQIfc50enQMkQjOIyBGJ3XsGyRe+GPU7gMIdXHDPJfNTHDX
      oQ6E2cT3zw/xxxt6US4+h2Qvx1C/A2PTPcjlbUhzTP4IJY7a9QZ6aBDJ7ESyuJCsbgz1O5HM
      uTvW6tBJ0of/DusT/xPZXobQdZIv/ymmtscwrrwfPTJK8sU/xvahryBZSxBCoHY8i3rlFUw7
      Povuu4Q2fAYRHgTZDEYzkq0U2VGO0JRMQU5HwWTDvPkTyNWbrs1xCIE2dp70mR8gwsNI7loM
      1RtBMqBeegHrI19ELm1e0PsUShy171300XZEKopIRxGpCChx5PK2zDutXINy+vto4xex7Ps9
      5KoNWfMvmr8b5dR30f3dYHaAkkCyuJDLV2Pa8KvIrqpr91RTpF7/EpKzGmPbY6hXXkIbPI7s
      acS08WMYqtZDgfM7IhUGsyvvvNCyEcDJnxykYkcbPzp8md+1fBvb+78MCNTB42i9B9EDPRhq
      t2Jc9RhyRVvGDhcCoSvo/h6UC79EH+/AuOI+ZG9rpuZJRdEjo2gDRzCuehTThl9BMtlACPTQ
      IMqVl9F6D2J9/18iO6453olEkMRzv4/10S+ROvA/MO/4TQy1W64dFwKt7x3UnrcwVG/CULsF
      yXm1IOgKIhFAxHxgsCBZnEhmJ3p0HOX099Cj45g2fhRJNpBu/wmSrRTz1k8jl69Ckq9ZtNpk
      F6nXv4R5+29gWLH/mlesmgIhwGiZISSRjiHivsy76HwVERnF0LAbQ/12JKsnUyGYHWCyzrhP
      5l0MkDr0t4h0FNlZBVN5nrgESJi2fhpDzZZMII+uQiqKOnwC5cyPkMvbMO/4DSTZSOLF/xfT
      6scxrn3yWn51DX3iIukzP0TEJzFv/gSGpntAkhDJECLmQ5KNGaFf73WajpM+9R3UzteQzA4M
      TXsxtb4PubQZoSTQQ/3ok93LQwC6pvPuN1/F+8hWDh18i096T2B7/C+unSAEQkujDZ1Avfwy
      eqAbDGbQNZCNSK4qTGufxFC3bebHnUquJFDOP416+UUMNVvQJjqQLG6MrQ9jXLE/Z+ugDZ8m
      8cIfYd78SUzbf/2WzEwLIRDRMZT2H4GuYdr8CSRXTd5ri2SY5Ov/BZGOgdBBU64+syHztyQD
      EggNTHZkRzlSST3GlgeRS1cgyfP/nkIIRHwyU+NebTEkVw1yaXP+/OkaWu9B0ie/jUhHsez/
      Q4z1O/NfPzKCcuaHqEPHkQwWJKsbyV6OUGKI6DiGxn0YWx9CH+9Aaf8xpvVPYVzzQdDSqP2H
      UK+8mmndLU7kkgZkb8vyEICaVul65wIT5R4mXvtrPvTkhzCuvD/nuUKITCGQAElGQpp3syrS
      MbThUxkzwzK7O7QQAn3sLHLFOiTDnfM4EbqGiPuQLG4wmEAyTIdUIvRpIUiSXLB5cSvzSDqG
      ZHXPfa4QGcFO5XnqNyWO2ncItfNV5JIGzNt/A8nizJPWMP3tloUApvjFWx2Ut/8V937+rzKm
      SpEic7BsRoEAJoIxqlZtKxb+IvNmWQkgGAziXXvfnc5GkSXEshGAUFNEQkFKanLHlBYpkotl
      I4DE0FlkCYym4gxrkfmzbAQQ63gFW0lxq6YihbEsBCBSEXx95ykruTvcsossHZaFAJT2H+Mv
      201FaTEQpkhhLHkB6PEAau9BgjUPUVEMhClSIEteAMrJb2Ha8kkmIgqVRQEUKZAlLQA9PII2
      fgFjy8MEIklKb1h/s0iRuViyAhBCkD72T5i3fxYkmXAse/38IkXm4qYEEPJPzHuLnFuN7u9B
      xMYxNO5B1QSaLjAb7/zKdEWWFgt2UxRCxx+OQjhGU2NjJtBDVXj+7bMEo4u/v5M20o7kehj5
      pXYUVUOWxHRg/tReBfn+P7Xa8930f+nqkug3839N05Bl+a76/5SD5Fz/FyLz/W73/xfsDSqE
      zsUL5zA7SlnZVI+u68iyzMDwGPHkbWgVJBnJeM3kKXPbKC8pDoMWKYybcofW9YxftnyD2osU
      WSrcVKSGXEDEUJEidyNLdhSoSJFbQVEARd7TFAVQ5D1NUQBF3tMUBVDkPc0tXa9D07Tp/wtx
      bYfu6/9f6N+3K+3UaPCdSHu3vYulmHah97lly6Jcz50sTEsx7VLI4+1IO59zESqTkyGsDicO
      myXr3Hg8TiQSpbKyIiut0FX8/iBWpxuH1YwkSYtjAk1NzQ8NDnL+1BF8USXrOLrK2ZPHOXul
      Z0ZGr6Ud4OzJI/jjao60Cu0njnOuszdP2n7OnDhCKKFlp9VSnD5xggtd+dOeOnaESCpHWjXJ
      qRMn6ejuy5O2jxNHjxBL6znSxjlx/BSXevqz0gJcudDOsTMXZhybOu6fGOXsqeMMT0Zzpr18
      7jTHz17MmdY3NsK508cYDsRzpr3UfoIT5y/nTDs2MsyF00cZCSZzpu04fYxTHZ05044MDXHx
      zBFGw+nstEJw4eRRTl/qzvkehwcH6Th9hPFIdrnRUzGu9A7j90/mzNPwQCd9QxM586QlI3T1
      DeP3B6aPL9qSZbqSxOGw45uw4LRmB6rHkinsTicWR/YaPpqSxGG345OtOCzZWYwl09hdTqw5
      0qrpJHa7HYx2bObsibpYSsXhtGfOuQEllcRusyJbHFhz7O0bS2s4HTYcOdKmUwnsVitGmwuL
      MbteiaV1XE4LTnt2nmPxODa7A4kc++RqCkaLDSQDTnu2t2ssHsfmcGKUc7iCa2lMVju6MODK
      sQdvLB7H6nRjNuZwIdHSWO0OVGHEZc+XtgS7NUdaNYXN6WR8zIjbluPbJxJYXSU534VQM+Vi
      YtyE68a0QmdoMkqpQwIpu1z0DwzgcnqIaYnsPOkqI4EEbps0Y8nHResEa8kQnV3dGIxGAvFs
      36DB/j5CCYV4NJJ1TIkF6ezuwWA0Ekpk7/Qy2NdLJKkSj4SzjqWiATq7ezEYDURS2WkH+nqJ
      pTRi0VDWsURkks6efowGmdgNLQBAf28PMUUnGglmHYuFJunsHcBokEgo2cuF9/f2kFAF0XB2
      2tGhAUb9EbR0jg+nJujq6gSDCX84nnV4ZGiAsWAMJZV9DCVOV1cnktGMP5K9zPjwYD8ToTjp
      ZCw7bTpKV9cVJEP+tP5oklQ8xzLs6QhdnVeQjWZ80XTW4aGBPgKxNMlY9rcXqTCdXZ3IRjP+
      2I1pJYxouEsrMOXY7dLjchBKqnjdOQKjJBmDUCkpm5l20VoAo6OctjYbaiKEJmV3M0o9HqzR
      IIq1NOuYxV1BW5uddCyIlCOtx+PBHA0hHNm7gdtKKljd5iAZDWIg131LiIZDGF3erGPO0ipW
      m13EIwEMefIcCQdzrj5R4q1mtdVNNBxAznFfT4mHcDiEs7Qy61hDYxMVqTQ+fyDrGEYrpWXl
      BIMBqkuzP2xjYxOV+dKabJSWlRMKBqjyZNe2TU1NJFMKk4FsUWJyUFpWkUnrzm5dGhubSKXz
      pDU7KfVWEg76qXZltwBNTc1500pmJ2XeSsKhABXO7LSpVBqLRWYyGqWmeuZmLbqSJBoOM6lB
      fX19jrQKVsAXSVBdmfn+i9YCCC3NpD8EQkfVswuE0+EgnUpiteVYWVlJ4g9GQOhoudI6HaRS
      SWz2HGnTCQKhKEJo6Dn2bXA6HKRSqZxp1VSMYCSO0HX0PHlOptLYc6RNJyKEogl0XUPPMa7g
      dDhIJFM5zafApA9VnzmKNo1swm4xouhSzs2//b4JNJEvrRm7xYiKnNOk80340AWoao60BjN2
      swENAxZTdjHxTUwgyHNfgwW7SUKTDJhzmIMTExOQL63Ris0koUsGzDdugC1BdW09VquFqsrs
      SshTXkNLQzUuV45FdiWJmrpaLFYrVeXXKr9FE4BssrGiuYGy6iZqPNk1iN1VQuu6rdSVZR8z
      Whw4zBIJ3YTHnl0LOBxOjBYXZpHdvJpsLmwmQRozbnt2gXE4nZhsLgx6dsyC2V6CRdZQZQtO
      a3Zap9OBxe4GNTut1VmKCQUMVuw5CqrL5cDuLEFXstNW1dYTCYzjcpdkHUOSsFkslJeVkkhn
      m3TVdQ2EJsdxuz0501otZsrLPCTT2YWttr6BgG+MkpLc9zWbTZSXeUgp2WnrGhrxT4ziLsl9
      X5PJRGWZh5SaXQvV1zfgGx+lpCS79ZckCZPRSEWZh3RWWgkzCboGfFgsOaL/JImh0XFK3c7s
      Y0gYtDi9w36s16W9oxNhU73+XMSjETAYyX1YEI3FMeTZ9TweuZo2Z1JBLJbAkGe3mHgkMsty
      5nom7Sz3lfLlWehEY0lkOffzRiIxjHncydPJGIouIed5V9FoNG+e0vEoqpDzvEeIRmN53dhT
      sSjadUuJ58pzvveYjEbQ5DzfYPq++dPqBmPO+wpdzVgUeQbvVVWdHk7Nm/a6xHftTLC7pAQl
      lUDJUYMgybidduKJHJ1GIbDZ7aipVE7zSdV1HHYrqXR264EQOJwOYtHc+2tpQsJuMZBM5w74
      cZeUEIlEcn8A2YjNBOkctakQApfTTjyRYz8sIbDaXWipRE6zDMBhNROO5ugEA3anm1goSK6k
      qqLgdjlzbykrdKwOJ2hqTpNO6Bp2m4VoPPceXjaHnVgknLOcCsBgkFBymV6AzWYlGUtkv0ch
      GJ2M01DpQsmR51hwkhJvJYqS+9uqsoO1K2sIha91vv9/1xswXZj/pAcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      5iGNPBgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
